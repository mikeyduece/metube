---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/search?key=AIzaSyDITuvV4M_ULt0SdhrPBHy88sb9JiZy6YM&maxResults=50&part=snippet&q=firefly
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Sat, 04 Nov 2017 19:00:29 GMT
      Date:
      - Sat, 04 Nov 2017 19:00:29 GMT
      Cache-Control:
      - private, max-age=120, must-revalidate, no-transform
      Etag:
      - '"ld9biNPKjAjgjV7EZ4EKeEGrhao/9S75pg6h88vmd-vHMiPx5tF0ADw"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="41,39,38,37,35"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 04 Nov 2017 19:00:29 GMT
recorded_with: VCR 3.0.3
